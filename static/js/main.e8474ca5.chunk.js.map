{"version":3,"sources":["componets/Authentication/Error.js","componets/Authentication/SignIn.js","componets/Authentication/SignUp.js","actions/Auth.js","actions/Types.js","componets/FeedsPage/Feeds.js","actions/Feeds.js","App.js","serviceWorker.js","reducers/Auth.js","reducers/Feeds.js","data.js","reducers/index.js","store.js","index.js"],"names":["Error","error","className","connect","state","user","Auth","useState","email","setEmail","password","setPassword","success","setSuccess","setError","to","type","required","name","onChange","e","target","value","placeholder","onClick","Signup","signUp","confirmPassword","setConfirmPassword","fullName","setFullName","console","log","prototype","PropTypes","func","isRequired","Fullname","dispatch","data","payload","posts","Feeds","feeds","image","post","feedData","chosenEmoji","setChosenEmoji","newPost","setNewText","emoji","setEmoji","role","aria-label","onEmojiClick","event","emojiObject","map","alt","src","App","exact","path","component","SignIn","SignUp","Boolean","window","location","hostname","match","initialState","combineReducers","action","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"0UAWeA,G,MATD,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACd,OAEM,yBAAKC,UAAU,sBAAsBD,KCiE9BE,G,MAAAA,aAHS,SAACC,GAAD,MAAY,CAClCC,KAAMD,EAAME,KAAKD,QAEqB,GAAzBF,EA/DA,SAAC,GAAc,IAAZE,EAAW,EAAXA,KAAW,EACDE,mBAAS,IADR,mBACpBC,EADoB,KACbC,EADa,OAEKF,mBAAS,IAFd,mBAEpBG,EAFoB,KAEVC,EAFU,OAGGJ,mBAAS,IAHZ,mBAGpBK,EAHoB,KAGXC,EAHW,OAIDN,mBAAS,IAJR,mBAIpBN,EAJoB,KAIba,EAJa,KAmB3B,MAAgB,QAAZF,EACK,kBAAC,IAAD,CAAUG,GAAG,WAIpB,yBAAKb,UAAU,qBACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,iBAAf,WACA,yBAAKA,UAAU,kBAAf,gBACA,2BACEA,UAAU,cACVc,KAAK,QACLC,UAAQ,EACRC,KAAK,OACLC,SAAU,SAACC,GAAD,OAAOX,EAASW,EAAEC,OAAOC,QACnCC,YAAY,UAEd,2BACErB,UAAU,cACVc,KAAK,WACLE,KAAK,WACLK,YAAY,WACZJ,SAAU,SAACC,GAAD,OAAOT,EAAYS,EAAEC,OAAOC,UAExC,yBAAKpB,UAAU,mBAAf,oBAEa,SAAZU,EAAqB,kBAAC,EAAD,CAAOX,MAAOA,IAAY,+BAEhD,4BAAQC,UAAU,iBAAiBsB,QAzCxB,WACXhB,IAAUH,EAAKG,OAASE,IAAaL,EAAKK,SAC5CG,EAAW,QAEXA,EAAW,QACPL,IAAUH,EAAKG,MACjBM,EAAS,+BACAJ,IAAaL,EAAKK,UAC3BI,EAAS,yBAiCT,WAIA,yBAAKZ,UAAU,oBAAf,8BAEE,kBAAC,IAAD,CAAMa,GAAG,YAAT,mB,OCnDJU,EAAS,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,OAAQrB,EAAW,EAAXA,KAAW,EACTE,mBAAS,IADA,mBAC5BC,EAD4B,KACrBC,EADqB,OAEHF,mBAAS,IAFN,mBAE5BG,EAF4B,KAElBC,EAFkB,OAGWJ,mBAAS,IAHpB,mBAG5BoB,EAH4B,KAGXC,EAHW,OAIHrB,mBAAS,IAJN,mBAI5BsB,EAJ4B,KAIlBC,EAJkB,OAKLvB,mBAAS,IALJ,mBAK5BK,EAL4B,KAKnBC,EALmB,OAOTN,mBAAS,IAPA,mBAO5BN,EAP4B,KAOrBa,EAPqB,KAiCnC,MAAgB,QAAZF,EACK,kBAAC,IAAD,CAAUG,GAAG,MAIpB,yBAAKb,UAAU,qBACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,iBAAf,YACA,yBAAKA,UAAU,kBAAf,+BACA,2BACEA,UAAU,cACVc,KAAK,QACLE,KAAK,QACLC,SAAU,SAACC,GAAD,OAAOX,EAASW,EAAEC,OAAOC,QACnCC,YAAY,UAEd,2BACErB,UAAU,cACVc,KAAK,WACLE,KAAK,WACLK,YAAY,WACZJ,SAAU,SAACC,GAAD,OAAOT,EAAYS,EAAEC,OAAOC,UAExC,2BACEpB,UAAU,cACVc,KAAK,WACLE,KAAK,WACLK,YAAY,mBACZJ,SAAU,SAACC,GAAD,OAAOQ,EAAmBR,EAAEC,OAAOC,UAE/C,2BACEpB,UAAU,cACVc,KAAK,OACLE,KAAK,OACLK,YAAY,YACZJ,SAAU,SAACC,GAAD,OAAOU,EAAYV,EAAEC,OAAOC,UAE3B,SAAZV,EAAqB,kBAAC,EAAD,CAAOX,MAAOA,IAAY,+BAChD,4BAAQuB,QA9DG,WACXd,IAAaiB,GACfd,EAAW,QACXC,EAAS,0BACAN,IAAUH,EAAKG,OACxBK,EAAW,QACXC,EACE,iFAGFN,IAAUH,EAAKG,OACfE,GACAiB,GACAE,GAEAE,QAAQC,IAAIxB,GAEZkB,EAAOlB,EAAOE,EAAUmB,GACxBhB,EAAW,QAEXA,EAAW,SA0CkBX,UAAU,mBAArC,WAIA,yBAAKA,UAAU,oBAAf,2BAEE,kBAAC,IAAD,CAAMa,GAAG,KAAT,eAOVU,EAAOQ,UAAY,CACjBP,O,OAAQQ,EAAUC,KAAKC,YAGzB,IAGejC,eAHS,SAACC,GAAD,MAAY,CAClCC,KAAMD,EAAME,KAAKD,QAEqB,CAAEqB,OClGpB,SAAClB,EAAOE,EAAU2B,GAAlB,OAA+B,SAACC,GACpDP,QAAQC,IAAIxB,GACZ,IAAM+B,EAAO,CACX/B,MAAOA,EACPE,SAAUA,EACVQ,KAAMmB,GAGRN,QAAQC,IAAIO,GAEZD,EAAS,CAAEtB,KCVa,aDUKwB,QAASD,ODwFzBpC,CAAqCsB,G,iBGsBrCtB,G,MAAAA,aAJS,SAACC,GAAD,MAAY,CAClCC,KAAMD,EAAME,KAAKD,KACjBoC,MAAOrC,EAAMsC,MAAMD,SAEmB,CAAEE,MCxHrB,SAACC,EAAM1B,EAAM2B,GAAb,OAAsB,SAACP,GAGxC,IAAMQ,EAAW,CACbF,MAAMA,EACN1B,KAAMA,EACN2B,KAAMA,GAEVd,QAAQC,IAAIc,GAEZR,EAAS,CAAEtB,KFRW,aEQOwB,QAASM,OD8G3B3C,EAnHF,SAAC,GAA4B,IAA1BwC,EAAyB,EAAzBA,MAAOtC,EAAkB,EAAlBA,KAAMoC,EAAY,EAAZA,MAAY,EACDlC,mBAAS,IADR,mBAChCwC,EADgC,KACnBC,EADmB,OAETzC,mBAAS,IAFA,mBAEhC0C,EAFgC,KAEvBC,EAFuB,OAGb3C,oBAAS,GAHI,mBAGhC4C,EAHgC,KAGzBC,EAHyB,KAwBvC,OACE,yBAAKlD,UAAU,mBACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,cACb,yBAAKA,UAAU,cACb,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,eAAf,cAEF,kBAAC,IAAD,CAAMa,GAAG,KACP,0BAAMb,UAAU,gBAAhB,aAKN,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,iBACb,8BACEc,KAAK,OACLd,UAAU,kBACVqB,YAAY,kBACZJ,SAAU,SAACC,GAAD,OAAO8B,EAAW9B,EAAEC,OAAOC,WAGzC,yBAAKpB,UAAU,eAAesB,QAAS,kBAAM4B,GAAUD,KACzD,0BAAME,KAAK,MAAMC,aAAW,eAA5B,iBAME,yBAAKpD,UAAU,oBAAoBsB,QA3C3B,WACE,KAAZyB,GAAgC,KAAdF,IACpBJ,EAJF,mHAIgBtC,EAAKa,KAAM+B,EAAUF,EAAYI,OAE/CH,EAAe,MACfI,GAAS,MAsCL,SAIF,yBACNlD,UAAU,mBAEV6C,EACU,4CAAkBA,EAAYI,OAE9B,gCAGS,IAAVA,EACC,kBAAC,IAAD,CAAQI,aA/DG,SAACC,EAAOC,GAC3BT,EAAeS,MAgEP,gCAIHhB,EAAMiB,KAAI,SAACjB,GAAD,OACT,yBAAKvC,UAAU,mBACb,yBAAKA,UAAU,uBACb,yBAAKyD,IAAI,GAAGC,IAAKnB,EAAMG,MAAO1C,UAAU,eAExC,yBAAKA,UAAU,6BACb,6BACE,yBAAKA,UAAU,aAAauC,EAAMvB,MAClC,yBAAKhB,UAAU,aACb,yBACEyD,IAAI,GACJzD,UAAU,OACV0D,IAAI,2EAEN,yBAAK1D,UAAU,aAAf,OACA,yBAAKA,UAAU,cACb,yBAAKA,UAAU,YAEjB,yBACEyD,IAAI,GACJzD,UAAU,OACV0D,IAAI,yEAEN,yBAAK1D,UAAU,aAAf,SAGJ,yBAAKA,UAAU,aAAf,QAGJ,yBAAKA,UAAU,cAAcuC,EAAMI,gBErFhCgB,MAjBf,WACE,OACE,yBAAK3D,UAAU,OACd,kBAAC,IAAD,KACG,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO4D,OAAK,EAACC,KAAK,IAAIC,UAAWC,IACjC,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,WAAWC,UAAWE,IACxC,kBAAC,IAAD,CAAOJ,OAAK,EAACC,KAAK,SAASC,UAAWtB,QCH5ByB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,2BChBAC,EAAe,CACnBnE,KAAM,I,gBCCFmE,EAAgB,CAElB/B,MCLK,CACL,CACEG,MACE,oHACF1B,KAAM,eACN2B,KAAM,uCAGR,CACED,MAAO,2DACP1B,KAAM,gBACN2B,KACE,2LAEJ,CACED,MAAO,iDACP1B,KAAM,UACN2B,KAAM,sBAER,CACED,MAAO,iDACP1B,KAAM,SACN2B,KAAM,kBAER,CACED,MAAO,gDACP1B,KAAM,QACN2B,KAAM,kBAER,CACED,MAAO,iDACP1B,KAAM,MACN2B,KAAM,oBAER,CACED,MAAO,iDACP1B,KAAM,MACN2B,KAAM,uBC/BG4B,4BAAgB,CAE3BnE,KHHW,WAAyC,IAA/BF,EAA8B,uDAAtBoE,EAAcE,EAAQ,uCAC7C1D,EAAkB0D,EAAlB1D,KAAMwB,EAAYkC,EAAZlC,QAEd,OAAQxB,GACN,ILRsB,aKSpB,MAAO,CAAEX,KAAMmC,GACjB,ILTuB,cKUrB,MAAO,CAAEnC,KAAM,IACjB,QACE,OAAOD,IGNJsC,MFCM,WAAwC,IAA9BtC,EAA6B,uDAArBoE,EAAcE,EAAO,uCAG9C1D,EACA0D,EADA1D,KAAMwB,EACNkC,EADMlC,QAGV,OAAOxB,GAEH,INdkB,aMgBd,OAAO,2BAAKZ,GAAZ,IAAmBqC,MAAM,CAAED,GAAH,mBAAcpC,EAAMqC,UAChD,QACI,OAAOrC,MGhBbuE,EAAa,CAACC,KASLC,EANDC,sBACVC,EALiB,GAOjBC,8BAAoBC,kBAAe,WAAf,EAAmBN,KCF3CO,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAUP,MAASA,GACjB,kBAAC,EAAD,QAGJQ,SAASC,eAAe,SNmHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAA5F,GACL8B,QAAQ9B,MAAMA,EAAM6F,c","file":"static/js/main.e8474ca5.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Error.css\";\nconst Error = ({error}) => {\n  return (\n   \n        <div className=\"incorrect-password\">{error}</div>\n     \n  );\n};\n\n\nexport default Error;","import React, { useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport Error from \"./Error\";\n\nimport \"./SignIn.css\";\n\nconst SignIn = ({ user }) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  const onSubmit = () => {\n    if (email === user.email && password === user.password) {\n      setSuccess(\"yes\");\n    } else {\n      setSuccess(\"fail\");\n      if (email !== user.email) {\n        setError(\"Incorrect email or password\");\n      } else if (password !== user.password) {\n        setError(\"Incorrect password\");\n      }\n    }\n  };\n\n  if (success === \"yes\") {\n    return <Redirect to=\"/feeds\" />;\n  }\n\n  return (\n    <div className=\"Sign-in-container\">\n      <div className=\"Sign-in-box\">\n        <div className=\"login-heading\">Sign In</div>\n        <div className=\"login-sub-text\">Welcome back</div>\n        <input\n          className=\"login-input\"\n          type=\"email\"\n          required\n          name=\"name\"\n          onChange={(e) => setEmail(e.target.value)}\n          placeholder=\"Email\"\n        />\n        <input\n          className=\"login-input\"\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"Password\"\n          onChange={(e) => setPassword(e.target.value)}\n        />\n        <div className=\"forgot-password\">Forgot Password?</div>\n\n        {success === \"fail\" ? <Error error={error} /> : <span></span>}\n\n        <button className=\"sign-in-button\" onClick={onSubmit}>\n          SIGN IN\n        </button>\n\n        <div className=\"dont-have-an-acc\">\n          Donâ€™t have an account?\n          <Link to=\"/sign-up\"> Sign up</Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.Auth.user,\n});\nexport default connect(mapStateToProps, {})(SignIn);\n","import React, { useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { signUp } from \"../../actions/Auth\";\nimport Error from \"./Error\";\n\nimport \"./SignIn.css\";\n\nconst Signup = ({ signUp, user }) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [fullName, setFullName] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n\n  const [error, setError] = useState(\"\");\n\n  const onSubmit = () => {\n    if (password !== confirmPassword) {\n      setSuccess(\"fail\");\n      setError(\"password do not match\");\n    } else if (email === user.email) {\n      setSuccess(\"fail\");\n      setError(\n        \"Oops, account with this email already exists! Try again with different email\"\n      );\n    } else if (\n      email !== user.email &&\n      password &&\n      confirmPassword &&\n      fullName\n    ) {\n      console.log(email);\n\n      signUp(email, password, fullName);\n      setSuccess(\"yes\");\n    } else {\n      setSuccess(\"fail\");\n    }\n  };\n\n  if (success === \"yes\") {\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    <div className=\"Sign-in-container\">\n      <div className=\"Sign-in-box\">\n        <div className=\"login-heading\">Sign Up </div>\n        <div className=\"login-sub-text\">Create Account for Camp K12</div>\n        <input\n          className=\"login-input\"\n          type=\"email\"\n          name=\"email\"\n          onChange={(e) => setEmail(e.target.value)}\n          placeholder=\"Email\"\n        />\n        <input\n          className=\"login-input\"\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"Password\"\n          onChange={(e) => setPassword(e.target.value)}\n        />\n        <input\n          className=\"login-input\"\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"confirm Password\"\n          onChange={(e) => setConfirmPassword(e.target.value)}\n        />\n        <input\n          className=\"login-input\"\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Full Name\"\n          onChange={(e) => setFullName(e.target.value)}\n        />\n        {success === \"fail\" ? <Error error={error} /> : <span></span>}\n        <button onClick={onSubmit} className=\"sign-in-button \">\n          SIGN UP\n        </button>\n\n        <div className=\"dont-have-an-acc\">\n          Already have an account?\n          <Link to=\"/\">Sign In</Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nSignup.prototype = {\n  signUp: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.Auth.user,\n});\nexport default connect(mapStateToProps, { signUp })(Signup);\n","import { USER_LOGIN } from \"../actions/Types\";\n\nexport const signUp = (email, password, Fullname) => (dispatch) => {\n  console.log(email);\n  const data = {\n    email: email,\n    password: password,\n    name: Fullname,\n  };\n\n  console.log(data);\n\n  dispatch({ type: USER_LOGIN, payload: data });\n};\n","\n\nexport const USER_LOGIN = \"USER_LOGIN\";\nexport const USER_LOGOUT = \"USER_LOGOUT\";\nexport const USER_FEEDS = \"USER_FEEDS\";","import React, { useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { feeds } from \"../../actions/Feeds\";\nimport Picker from \"emoji-picker-react\";\nimport \"./Feeds.css\";\n\nconst Feed = ({ feeds, user, posts }) => {\n  const [chosenEmoji, setChosenEmoji] = useState(\"\");\n  const [newPost, setNewText] = useState(\"\");\n  const [emoji, setEmoji] = useState(false);\n\n  const onEmojiClick = (event, emojiObject) => {\n    setChosenEmoji(emojiObject);\n  };\n  var images =\n    \"https://cdn5.vectorstock.com/i/1000x1000/51/99/icon-of-user-avatar-for-web-site-or-mobile-app-vector-3125199.jpg\";\n\n  const addPost = () => {\n    if (newPost !== \"\" || chosenEmoji!==\"\") {\n      feeds(images, user.name, newPost + chosenEmoji.emoji);\n     \n      setChosenEmoji(null);\n      setEmoji(false);\n    }\n \n  };\n\n    // if (user.name === undefined) {\n    //   return <Redirect to=\"/\" />;\n    // }\n  return (\n    <div className=\"feeds-container\">\n      <div className=\"feeds-box\">\n        <div className=\"field-head\">\n          <div className=\"your-feeds\">\n            <div className=\"feed-item-box\">\n              <div className=\"header-text\">Your Feed</div>\n            </div>\n            <Link to=\"/\">\n              <span className=\"feeds-logout\">LOGOUT</span>\n            </Link>\n          </div>\n        </div>\n\n        <div className=\"post-container\">\n          <div className=\"post-textarea\">\n            <textarea\n              type=\"text\"\n              className=\"write-feed-here\"\n              placeholder=\"Write a post...\"\n              onChange={(e) => setNewText(e.target.value)}\n            ></textarea>\n          </div>\n          <div className=\"emoji-button\" onClick={() => setEmoji(!emoji)} >\n        <span role=\"img\" aria-label=\"happy-emoji\">\n          &#128515;\n        </span>\n      </div>\n   \n         \n          <div className=\"feeds-post-button\" onClick={addPost}>\n            POST\n          </div>\n        </div>\n        <div\n  className=\"emoji-container\"\n        >\n {chosenEmoji ? (\n            <span>You chose: {chosenEmoji.emoji}</span>\n          ) : (\n            <span></span>\n          )}\n\n          {emoji === true ? (\n            <Picker onEmojiClick={onEmojiClick} />\n          ) : (\n            <span></span>\n          )}\n\n        </div>\n        {posts.map((posts) => (\n          <div className=\"posts-container\">\n            <div className=\"feeds-user-info-box\">\n              <img alt=\"\" src={posts.image} className=\"user-image\" />\n\n              <div className=\"feeds-user-info-box-right\">\n                <div>\n                  <div className=\"feed-name\">{posts.name}</div>\n                  <div className=\"icons-box\">\n                    <img\n                      alt=\"\"\n                      className=\"icon\"\n                      src=\"https://www.freeiconspng.com/thumbs/graduate-icon/graduate-icon-16.png\"\n                    />\n                    <div className=\"icon-info\">100</div>\n                    <div className=\"circle-box\">\n                      <div className=\"circle\"></div>\n                    </div>\n                    <img\n                      alt=\"\"\n                      className=\"icon\"\n                      src=\"https://www.iconpacks.net/icons/2/free-euro-coin-icon-2141-thumb.png\"\n                    />\n                    <div className=\"icon-info\">340</div>\n                  </div>\n                </div>\n                <div className=\"post-time\">5h</div>\n              </div>\n            </div>\n            <div className=\"feeds-text\">{posts.post}</div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.Auth.user,\n  posts: state.Feeds.posts,\n});\nexport default connect(mapStateToProps, { feeds })(Feed);\n","import { USER_FEEDS} from '../actions/Types';\n\nexport const feeds = (image,name, post) => (dispatch) => {\n   \n\n    const feedData = {\n        image:image,\n        name: name,\n        post: post,\n    }\n    console.log(feedData);\n\n    dispatch({ type: USER_FEEDS, payload: feedData });\n}\n\n\n\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport './App.css';\n\nimport SignIn from '../src/componets/Authentication/SignIn'\nimport SignUp from '../src/componets/Authentication/SignUp'\nimport Feeds from '../src/componets/FeedsPage/Feeds'\n \nfunction App() {\n  return (\n    <div className=\"App\">\n     <Router>\n        <Switch>\n          <Route exact path=\"/\" component={SignIn}  />\n          <Route exact path=\"/sign-up\" component={SignUp} />\n          <Route exact path=\"/feeds\" component={Feeds} />\n          {/* <Route path=\"/feed/:feedId\" component={Feed} />\n          <Route path=\"/user/:userId\" component={User} />\n          <Route component={NotFound} /> */}\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { USER_LOGIN, USER_LOGOUT } from \"../actions/Types\";\n\nconst initialState = {\n  user: {},\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case USER_LOGIN:\n      return { user: payload };\n    case USER_LOGOUT:\n      return { user: {} };\n    default:\n      return state;\n  }\n}\n","import {USER_FEEDS} from '../actions/Types';\nimport data from \"../data\";\n\n\nconst initialState =  {\n\n    posts :data.feeds,\n\n};\n\nexport default function (state = initialState, action){\n\n    const {\n        type, payload\n    } = action;\n\n    switch(type) {\n\n        case USER_FEEDS : \n \n            return { ...state, posts: [payload,...state.posts] };\n        default :\n            return state;\n    }\n} ","export default {\n  feeds: [\n    {\n      image:\n        \"https://images.unsplash.com/photo-1602030028438-4cf153cbae9e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&w=1000&q=80\",\n      name: \"Nikhil Yadav\",\n      post: \"Today I won a car in a competition!\",\n    },\n\n    {\n      image: \"https://www.venmond.com/demo/vendroid/img/avatar/big.jpg\",\n      name: \"Shirai Subaru\",\n      post:\n        \"Today I won a car in a competition! This is a sample of a longer post which has been written by a new person to demonstrate that the size of the feed box should be as long as the text\",\n    },\n    {\n      image: \"https://randomuser.me/api/portraits/men/28.jpg\",\n      name: \"Tom Roy\",\n      post: \"This is post by me\",\n    },\n    {\n      image: \"https://randomuser.me/api/portraits/men/86.jpg\",\n      name: \"Srirag\",\n      post: \"I love Campk12\",\n    },\n    {\n      image: \"https://randomuser.me/api/portraits/men/2.jpg\",\n      name: \"Jerry\",\n      post: \"I love Campk12\",\n    },\n    {\n      image: \"https://randomuser.me/api/portraits/men/22.jpg\",\n      name: \"Sam\",\n      post: \"learn at Campk12\",\n    },\n    {\n      image: \"https://randomuser.me/api/portraits/men/26.jpg\",\n      name: \"Joe\",\n      post: \"Coding in campk12\",\n    },\n  ],\n\n  user: [\n    {\n      email: \"roy@gmail.com\",\n      password: \"123456\",\n      name: \"Roy S\",\n    },\n  ],\n};\n","import {combineReducers} from \"redux\";\n\nimport Auth from './Auth'\nimport Feeds from './Feeds'\n\n\n\nexport default combineReducers({\n\n    Auth,Feeds,\n})","import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\nconst middleware = [thunk];\n\n\nconst store = createStore(\n    rootReducer,\n    initialState,\n    composeWithDevTools(applyMiddleware(...middleware)),\n    );\n\nexport default store;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from \"react-redux\";\n\nimport store from './store';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store = {store} >\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}